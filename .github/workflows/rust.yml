# https://docs.github.com/en/actions/using-workflows/about-workflows
# 라이브러리 별 캐시 활성화를 위해선 cache key 뒤에 -${{ hashFiles('**/Cargo.toml') }} 를 붙여 사용합니다.
name: Rust build & test

on:
    push:
        branches: ["**"]

env:
    CARGO_TERM_COLOR: always

jobs:
    build-test:
        strategy:
            matrix:
                os:
                    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
                    [windows-latest, ubuntu-latest, macos-latest]
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: "true"
            - uses: actions/cache@v4
              with:
                  path: |
                      target
                      ~/.cargo
                  key: ${{ matrix.os }}-fireman
            - name: Print Target
              run: rustup show
            - name: Build Debug
              run: cargo build --verbose --workspace --exclude firebat
            - name: Build Release
              run: cargo build --release --verbose --workspace --exclude firebat
            - name: Test Debug
              # for debug assertion
              run: cargo test --verbose --workspace --exclude firebat
            - name: Test Release
              # analyzing executable files should depend on os stats, so we test on all os
              run: cargo test --release --verbose --workspace --exclude firebat
